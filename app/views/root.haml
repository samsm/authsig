- @verification_presenter.view = self
.row
  .span12.text-center
    %h3
      %a#example{href: "/verify/request"} Enter stuff in the form below to change this link to something useful.
    %p.suggest-click.hide
      %i (click to request verification!)
.row
  .span12
    %h1 Welcome to AuthSig
    %h4 Kinda know what you're doing? Here's a form, go nuts. It modifies the above url.
    %form{action: "/verify/request", method: "GET"}
      - %w(login service redirect_url notify_url hide time).each do |attribute|
        %label{for: attribute}= "#{attribute}:"
        %input{id: attribute, name: attribute}

    - if current_user
      %p Logged in as #{current_user.login}. #{link_to "Logout", url(:sessions, :logout)}?
    - else
      %p Want to #{link_to "login", url(:sessions, :login)}? l: user_1, p: aaaaaaaa (that's "a" 8 times)
    %p Request a person's identity by sending them to:
    %p
      %code= uri(url(:verify, :request, login: "id-to-verify"))
    %p
      If AuthSig can verify that the login/service in the url belongs to the currently logged in user,
      it will reveal a signed url to them (and/or you, depending on settings). This signature is based on
      everything else that is in the query string, plus a secret that only the AuthSig server knows.
    %p
      %code= @verification_presenter.verified_url
    %p Visit that url to see if it is valid:
    %p
      %code curl -IL "#{@verification_presenter.verified_url}"
      %code (returns HTTP/1.1 200 OK)
    %p Tampered urls return 403
    %p
      %code curl -IL "#{@verification_presenter.verified_url}&tampered=true"
      %code (returns HTTP/1.1 403 Forbidden)
    %p
      %code curl -IL "#{@verification_presenter.verified_url.sub("id-to-verify", "other-id")}"
      %code (returns HTTP/1.1 403 Forbidden)
    %p
      Create a url with information you'd like to verify. You can put anything you want in a query string,
      and AuthSig's signature will include that information.
    %p
      %code=uri(url(:verify, :request, login: "id-to-verify", foo: "bar"))
    %p It's new! Some stuff might not work.
    %h3 You can pass whatever you want into the request url, but some stuff has special meaning.
    %dl
      %dt login
      %dd The name of user to be verified. Only user_1 will be able to get a verified url for user_1.
      %dt service
      %dd
        The name of the service to check for the above login. Default is "password", and uses AuthSig's internal
        authentication database.
        Another reasonable option might be "twitter" or "facebook".
      %dt redirect_url
      %dd If set, the user will be redirected to this url after verification.
      %dt notify
      %dd If set, will POST the verification to the url specified here.
      %dt hide
      %dd
        If set, the user will not be show the verified url.
        It will be a secret from them (works well with notify + redirect_url).
      %dt time
      %dd
        Verifies that this is a valid time. During the request process,
        ensures that this time is near the current time.
        Accepts iso8601 (must include seconds) or epoch seconds.
      %dt time_fudge
      %dd
        The number of seconds off the above calculation can be. Maybe need to be high if a user needs to
        log in before continuing the request process.
    %h4 Provides
    %dl
      %dt provides
      %dd
        %p
          Pass in a single provides, or more than one in the form of an array. AuthSig will attempt to
          fill in (Provide) those fields. Currently login, service, and time will work. Overrides other
          requested params with the same names, if they exist.
        %ul
          %li
            %strong login
            will fill in currently logged in user's login name
          %li
            %strong service
            will fill in currently logged in user's service
          %li
            %strong time
            will fill in current time



    %h4
      You can add your own features just by adding components to the url.
      Here's some examples that came to mind while writing this.
    %dl
      %dt expires_at
      %dd
        A time, after which the signed url is invalid. Could be a decade, a month, could be a minute.
        Could be a time of day, like "evening". Maybe that verification is only good before 6:00.
        Who knows!
      %dt user_id
      %dd
        An id that corresponds to another system's user database. Or nonsense.
        AuthSig doesn't interpret most information you pass in.
      %dt access
      %dd
        Perhaps a string reading "readonly". Or "mega admin". Whatever!
        This could be useful if you want to use less secure authentication controls for some things, and
        more secure controls for "purchasing".
      %dt honey-badger
      %dd "Don't care". You can write this! And like the honey badger, AuthSig WILL NOT CARE!


- if false
  .row
    .span12
      %p This is the root page.
      = partial 'suggested_links'
